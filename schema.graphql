# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type BandDjsDataType {
    hightlight: VideoUrl
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
    videoSample: [VideoUrl!]
}

type BeautyProfessionalDataType {
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
}

type CakesDessertsDataType {
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
}

type CatererDataType {
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
}

type City {
    key: String!
    name: String!
}

type Clap {
    key: String!
    name: String!
    values: [String!]!
}

type Connection {
    edges: [NodeEdge!]!
    pageInfo: PageInfo!
}

type ConnectionExtra {
    district_id: String
    district_key: String
    edges: [NodeEdge!]!
    pageInfo: PageInfo!
    vendor_type: VendorType
}

type ConnectionNode {
    business_name: String!
    business_name_slug: String
    district_display_name: String
    gallery_photos: [Image!]!
    id: String!
    vendor_type: VendorType!
}

type District {
    cities: [City!]!
    key: String!
    name: String!
}

type Fixed {
    price: Float!
}

type FixedObject {
    price: Float
}

type FloristsDataType {
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
}

type FrequentQuestion {
    answer: String!
    question: String!
}

type Geo {
    latitude: Float!
    longitude: Float!
}

type Image {
    ht: Float!
    id: String!
    wd: Float!
}

type LocationNode {
    id: String!
    key: String!
    name: String!
    parent_id: String
}

type Mutation {
    changePassword(data: VendorPasswordChangeInput!): VendorProfile
    confirmEmailVendor(token: String!): Boolean
    forgotPassword(email: String!): Boolean!
    vendorEditDetails(data: VendorDetailsInput!): Boolean!
    vendorLogin(password: String!, phone: String!): Boolean
    vendorLoginOtp(phone: String!): Boolean
    vendorLogout: Boolean!
    vendorRegister(address: String, authCode: String!, email: String, firstName: String!, lastName: String!, password: String!, phone: String!): Boolean!
    vendorRegisterOtp(phone: String!): Boolean!
}

type NodeEdge {
    "Used in `before` and `after` args"
    cursor: String!
    node: ConnectionNode!
}

type PackageObject {
    description: String
    min_price: Float
    name: String
    price: [PriceObject!]
    short: String
}

type PageInfo {
    endCursor: String
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
}

type PersonInfo {
    name: String!
    person_photo: Image!
    position: String
}

type PhotographerDataType {
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
}

type PriceObject {
    fixed: FixedObject
    name: String
    price_type: PriceType!
    range: RangeObject
    starting: StartingObject
    unit: String
}

type Query {
    cities(districts_id: String): [LocationNode!]!
    clapStore(vendorType: VendorType!): [StoreClap!]!
    districts(province_id: String): [LocationNode!]!
    isVendorPhoneExist(phone: String!): Boolean!
    provinces: [LocationNode!]!
    vendorDetails(vendorDataId: String!): VendorDetails
    vendorDetailsB(businessName: String!, vendorDataId: String): VendorDetails
    vendorDetailsExtra: VendorDetailsExtra
    vendorProfile: VendorProfile
    vendorSearch(
        "Paginate after opaque cursor"
        after: String,
        "Paginate before opaque cursor"
        before: String,
        "Paginate first"
        first: Float,
        "Paginate last"
        last: Float,
        where: ListInput
    ): Connection!
    vendorSearchWithExtra(
        "Paginate after opaque cursor"
        after: String,
        "Paginate before opaque cursor"
        before: String,
        "Paginate first"
        first: Float,
        "Paginate last"
        last: Float,
        where: ListInput
    ): ConnectionExtra!
}

type Range {
    from_price: Float!
    to_price: Float!
}

type RangeObject {
    from_price: Float
    to_price: Float
}

type ServicePrice {
    class: String
    fixed: Fixed
    price_type: ServicePriceType!
    product: String
    range: Range
    starting: Starting
    unit: String
}

type ServicePricing {
    min_spend: Float
    name: String!
    service_prices: [ServicePrice!]!
}

type ServicePricings {
    pricings: [ServicePricing!]
}

type SocialMedia {
    facebook: String
    instagram: String
    pinterest: String
    website: String
}

type Spp {
    min_price: Float
    packages: [PackageObject!]
}

type Starting {
    price: Float!
}

type StartingObject {
    price: Float
}

type StoreClap {
    key: String!
    name: String!
    values: [String!]!
}

type VendorDetails {
    address: String
    business_name: String
    claps: [Clap!]
    description: String
    frequent_questions: [FrequentQuestion!]
    galleryPhoto: [Image!]
    geo: Geo
    links: SocialMedia
    phone: String
    searchLocations: [District!]
    vendorTypes: VendorTypes
    vendor_type: VendorType
}

type VendorDetailsExtra {
    address: String
    business_name: String
    claps: [Clap!]
    description: String
    frequent_questions: [FrequentQuestion!]
    galleryPhoto: [Image!]
    geo: Geo
    isComplete: Boolean
    isLive: Boolean
    links: SocialMedia
    listingStatus: ListingStatus
    phone: String
    reason: String
    searchLocations: [District!]
    vendorTypes: VendorTypes
    vendor_type: VendorType
}

type VendorProfile {
    email: String
    firstName: String!
    id: ID!
    lastName: String!
    phone: String!
    verified: Boolean!
}

type VendorTypes {
    band_djs_type: BandDjsDataType
    beauty_professionals_type: BeautyProfessionalDataType
    cakes_desserts_type: CakesDessertsDataType
    caterer_type: CatererDataType
    florists_type: FloristsDataType
    photographer_type: PhotographerDataType
    venue_type: VenueDataType
    videographer_type: VideographerDataType
}

type VenueDataType {
    guestCapacity: Float
    hightlight: VideoUrl
    pricing: Spp
    servicePricing: ServicePricings
}

type VideoUrl {
    customThumbnail: Image
    videoTitle: String
    videoType: String
    vimeoUrl: String
    youtubeUrl: String
}

type VideographerDataType {
    hightlight: VideoUrl
    personInfo: PersonInfo
    pricing: Spp
    servicePricing: ServicePricings
    videoSample: [VideoUrl!]
}

enum ListingStatus {
    paymentPending
    pending
    suspended
    unverified
    verified
}

enum PriceType {
    fixed
    range
    starting
}

enum ServicePriceType {
    Fixed
    Range
    Starting
}

enum VendorType {
    bands_dj
    beauty_professional
    cakes_dessert
    caterer
    florist
    photographer
    venue
    videographer
}

input BandDjsDetailsInput {
    highlight: VideoUrlInput
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
    videoSample: [VideoUrlInput!]
}

input BeautyProfessionalDetailsInput {
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

input CakesDessertsDetailsInput {
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

input CatererDetailsInput {
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

input ClapInput {
    key: String!
    name: String!
    values: [String!]!
}

input CustomThumbnailInput {
    id: String
    token: String
}

input FixedInput {
    price: Float
}

input FloristsDetailsInput {
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

"Edit common vendor details"
input FrequentQuestionInput {
    answer: String!
    question: String!
}

input GalleryPhotoInput {
    id: String
    token: String
}

input GeoInput {
    latitude: Float!
    longitude: Float!
}

"Register new vendor data"
input ListInput {
    districtID: String
    searchQuery: String
    vendorType: VendorType
}

input PackageInput {
    description: String
    min_price: Float
    name: String
    price: [PriceInput!]
    short: String
}

input PersonInfoInput {
    name: String!
    personPhoto: PersonPhotoInput
    position: String
}

input PersonPhotoInput {
    token: String
}

input PhotographerDetailsInput {
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

input PriceInput {
    fixed: FixedInput
    name: String
    price_type: PriceType!
    range: RangeInput
    starting: StartingInput
    unit: String
}

input RangeInput {
    from_price: Float
    to_price: Float
}

input ServicePriceInput {
    class: String
    fixed: FixedInput
    price_type: ServicePriceType!
    product: String
    range: RangeInput
    starting: StartingInput
    unit: String
}

input ServicePricingInput {
    min_spend: Float
    name: String!
    service_prices: [ServicePriceInput!]
}

input ServicePricingsInput {
    pricings: [ServicePricingInput!]
}

input SppInput {
    min_price: Float
    packages: [PackageInput!]
}

input StartingInput {
    price: Float
}

"Edit common vendor details"
input VendorDetailsInput {
    address: String
    bandDjsDetails: BandDjsDetailsInput
    beautyProfessionalDetails: BeautyProfessionalDetailsInput
    businessName: String
    cakesDessertsDetails: CakesDessertsDetailsInput
    catererDetails: CatererDetailsInput
    cityIDs: [String!]
    claps: [ClapInput!]
    description: String
    facebook: String
    floristsDetails: FloristsDetailsInput
    frequentQuestion: [FrequentQuestionInput!]
    gallery_photos: [GalleryPhotoInput!]
    geo: GeoInput
    instagram: String
    phone: String
    photographerDetails: PhotographerDetailsInput
    pinterest: String
    vendorType: VendorType
    venueDetails: VenueDetailsInput
    videographerDetails: VideographerDetailsInput
    website: String
}

"vendor password change input"
input VendorPasswordChangeInput {
    password: String!
    token: String!
}

input VenueDetailsInput {
    guestCapacity: Float
    highlight: VideoUrlInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
}

input VideoUrlInput {
    customThumbnail: CustomThumbnailInput
    videoTitle: String
    videoType: String
    vimeoUrl: String
    youtubeUrl: String
}

input VideographerDetailsInput {
    highlight: VideoUrlInput
    personInfo: PersonInfoInput
    pricing: SppInput
    servicePricing: ServicePricingsInput
    videoSample: [VideoUrlInput!]
}
